//
//  VisitorFormPresenterTests.swift
//  VisitorApp
//
//  Created by Mayur Kamthe on 15/10/20.
//  Copyright (c) 2020 Mayur Kamthe. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import VisitorApp
import XCTest

class VisitorFormPresenterTests: XCTestCase
{
  // MARK: Subject under test
  
   var sut: VisitorPresenter?
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    setupVisitorFormPresenter()
  }
  
  override func tearDown()
  {
    super.tearDown()
    sut = nil
  }
  
  // MARK: Test setup
  
  func setupVisitorFormPresenter()
  {
     sut = VisitorPresenter()
  }
  
  // MARK: Test doubles
  
  class VisitorFormDisplayLogicSpy: VisitorFormDisplayLogic
  {
    var displayFetchRecordCalled = false
    
    func displayVisitorData(viewModel: VisitorForm.fetchVisitorRecord.ViewModel) {
        displayFetchRecordCalled = true
    }
  }
  
  // MARK: Tests
  
    func testPresentFetchRecord()
  {
    // Given
    let spy = VisitorFormDisplayLogicSpy()
    sut?.viewObj = spy

    let visits = Visit()
    let response = VisitorForm.fetchVisitorRecord.Response(visit: visits)
  
    // When
    sut?.presentFetchResults(response: response)
    
    // Then
    XCTAssertTrue(spy.displayFetchRecordCalled, "presentSomething(response:) should ask the view controller to display the result")
  }
}
